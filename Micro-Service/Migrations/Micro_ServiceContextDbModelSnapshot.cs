// <auto-generated />
using System;
using Micro_Service.Data;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

namespace Micro_Service.Migrations
{
    [DbContext(typeof(Micro_ServiceContextDb))]
    partial class Micro_ServiceContextDbModelSnapshot : ModelSnapshot
    {
        protected override void BuildModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .UseIdentityColumns()
                .HasAnnotation("Relational:MaxIdentifierLength", 128)
                .HasAnnotation("ProductVersion", "5.0.0");

            modelBuilder.Entity("Micro_Service.Model.BankAccount", b =>
                {
                    b.Property<int>("AccountID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .UseIdentityColumn();

                    b.Property<string>("AccounNumer")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("AccountType")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<double>("Balance")
                        .HasColumnType("float");

                    b.Property<int>("ClientID")
                        .HasColumnType("int");

                    b.Property<int?>("ClientsCLientID")
                        .HasColumnType("int");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Status")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("AccountID");

                    b.HasIndex("ClientsCLientID");

                    b.ToTable("BankAccounts");

                    b.HasData(
                        new
                        {
                            AccountID = 1,
                            AccounNumer = "29484675683",
                            AccountType = "Savings",
                            Balance = 23000.0,
                            ClientID = 1,
                            Name = "FNB",
                            Status = "Active"
                        },
                        new
                        {
                            AccountID = 2,
                            AccounNumer = "75656478",
                            AccountType = "Cheque",
                            Balance = 20000.0,
                            ClientID = 2,
                            Name = "Standard",
                            Status = "Active"
                        },
                        new
                        {
                            AccountID = 3,
                            AccounNumer = "348575894",
                            AccountType = "Savings",
                            Balance = 68000.0,
                            ClientID = 2,
                            Name = "Standard",
                            Status = "Active"
                        });
                });

            modelBuilder.Entity("Micro_Service.Model.City", b =>
                {
                    b.Property<int>("CityID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .UseIdentityColumn();

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("CityID");

                    b.ToTable("Cities");

                    b.HasData(
                        new
                        {
                            CityID = 1,
                            Name = "Port Elizabeth"
                        },
                        new
                        {
                            CityID = 2,
                            Name = "Durban"
                        },
                        new
                        {
                            CityID = 3,
                            Name = "Cape Town"
                        });
                });

            modelBuilder.Entity("Micro_Service.Model.Clients", b =>
                {
                    b.Property<int>("CLientID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .UseIdentityColumn();

                    b.Property<string>("AddressLine1")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("AddressLine2")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("CityID")
                        .HasColumnType("int");

                    b.Property<string>("FirtName")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("SuburbID")
                        .HasColumnType("int");

                    b.Property<string>("Surname")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("CLientID");

                    b.HasIndex("CityID");

                    b.HasIndex("SuburbID");

                    b.ToTable("Client");

                    b.HasData(
                        new
                        {
                            CLientID = 1,
                            AddressLine1 = "25 Nelson Mandela",
                            AddressLine2 = "",
                            CityID = 1,
                            FirtName = "George",
                            SuburbID = 2,
                            Surname = "Molala"
                        },
                        new
                        {
                            CLientID = 2,
                            AddressLine1 = "19 Perkins",
                            AddressLine2 = "",
                            CityID = 2,
                            FirtName = "Mary",
                            SuburbID = 3,
                            Surname = "Nkuna"
                        });
                });

            modelBuilder.Entity("Micro_Service.Model.Suburb", b =>
                {
                    b.Property<int>("SuburbID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .UseIdentityColumn();

                    b.Property<int>("CityID")
                        .HasColumnType("int");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("SuburbID");

                    b.HasIndex("CityID");

                    b.ToTable("Suburbs");

                    b.HasData(
                        new
                        {
                            SuburbID = 1,
                            CityID = 1,
                            Name = "Humewood"
                        },
                        new
                        {
                            SuburbID = 2,
                            CityID = 1,
                            Name = "Summerstrand"
                        },
                        new
                        {
                            SuburbID = 3,
                            CityID = 2,
                            Name = "Kwamashu"
                        });
                });

            modelBuilder.Entity("Micro_Service.Model.BankAccount", b =>
                {
                    b.HasOne("Micro_Service.Model.Clients", "Clients")
                        .WithMany("BankAccounts")
                        .HasForeignKey("ClientsCLientID");

                    b.Navigation("Clients");
                });

            modelBuilder.Entity("Micro_Service.Model.Clients", b =>
                {
                    b.HasOne("Micro_Service.Model.City", "City")
                        .WithMany()
                        .HasForeignKey("CityID")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("Micro_Service.Model.Suburb", "Suburb")
                        .WithMany()
                        .HasForeignKey("SuburbID")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("City");

                    b.Navigation("Suburb");
                });

            modelBuilder.Entity("Micro_Service.Model.Suburb", b =>
                {
                    b.HasOne("Micro_Service.Model.City", "City")
                        .WithMany("Suburbs")
                        .HasForeignKey("CityID")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("City");
                });

            modelBuilder.Entity("Micro_Service.Model.City", b =>
                {
                    b.Navigation("Suburbs");
                });

            modelBuilder.Entity("Micro_Service.Model.Clients", b =>
                {
                    b.Navigation("BankAccounts");
                });
#pragma warning restore 612, 618
        }
    }
}
